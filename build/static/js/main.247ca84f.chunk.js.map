{"version":3,"sources":["logo.png","instagram.png","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","state","visible","toggleMenu","bind","currentState","this","setState","x","console","log","url","className","onClick","id","name","map","i","key","href","page","handleNavigation","Component","App","animateIn","animateOut","style","fontSize","marginBottom","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.247ca84f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.da9050c1.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.7ea7582b.png\";","import React, { Component } from 'react';\nimport './Navbar.scss'\n\nexport default class Navbar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { visible: false };\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n  \n  toggleMenu() {\n    const currentState = this.state.visible;\n    this.setState({ visible: !currentState });\n  }\n\n  handleNavigation(x){\n    console.log(x.url)\n    // this.props.getActivePage(x.url)\n  }\n\n  render() {\n\n  const navigation = [\n    {id: 0, name: 'about us', url: 'aboutus'},\n    {id: 1, name: 'why', url: 'why'},\n    {id: 2, name: 'how', url: 'how'},\n    {id: 3, name: 'contact us', url: 'contactus'}\n  ]\n\n    return (\n      <div className=\"navbarfixed\">\n        <div className={this.state.visible ? 'button_container active': 'button_container  animated bounceInLeft'}  onClick={this.toggleMenu}>\n        <span className=\"top\"></span>\n        <span className=\"middle\"></span>\n        <span className=\"bottom\"></span>\n      </div>\n\n      <div className={this.state.visible ? 'overlay open' : 'overlay' }>\n        <nav className={this.state.visible ? 'overlay-menu active': 'overlay-menu'}  onClick={this.toggleMenu}>\n        <ul>  \n          {navigation.map((x,i)=>\n            <li key={i}>\n              <a href={'#'+x.url} page={x.name} onClick={this.handleNavigation.bind(this,x)}>{x.name}</a>\n            </li>\n          )}\n        </ul>\n        </nav>\n        </div>\n      </div>\n      );\n  }\n\n\n}\n","import React from 'react';\nimport logo from './logo.png'\nimport instagram from './instagram.png'\nimport Navbar from \"./Navbar\";\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport './Navbar.scss';\nimport './App.scss';\n\nexport default class App extends React.Component {\n\n  render(){\n\n\n\n\n  return (\n    <div className=\"App cont\">\n      <div className=\"background\">\n          <Navbar />\n          <section id=\"home\" className=\"home\">\n          <ScrollAnimation animateIn='bounceInRight' animateOut='bounceOutLeft'>\n            <h1 className=\"title\">curate <br/> for <br/> change</h1> \n          </ScrollAnimation>\n            <div className='arrow-down' >\n              <a href='#aboutus'>\n                <i className='animated pulse infinite fas fa-angle-double-down'style={{fontSize:'48px'}}></i>\n              </a>\n            </div>\n\n          </section>\n\n\n          <section id=\"aboutus\" className=\"aboutus padding-top-300\">\n            <h2 className=\"title\">about us</h2><br/>\n            <ScrollAnimation animateIn='fadeIn'>\n            <p>\n          Curate for change uses the transformative power of art to<br/> promote awareness, encourage dialogue, and <br/>\n          inspire action. We seek to address issues of social justice,<br/> environmental stewardship and sustainabilityâ€”in <br/>\n          creative, inspiring, and ultimately positive ways by creating<br/> on-site installations that are at once emotional, <br/>\n          intellectual, and sensory.  \n            </p>\n            </ScrollAnimation>\n\n          </section>\n\n\n          <section id=\"why\" className=\"why padding-top-300\">\n\n            <h2 className=\"title\">why</h2><br/>\n            <ScrollAnimation animateIn='fadeIn'>\n            <p>\n          Art and design are manifestations of the culture from which<br/> they emanate from and we therefore seek to use <br/>\n          them as a vessel for cultural exchange. We believe that <br/>promoting social awareness is a responsibility. We <br/>\n          consider the act and practice of staging artistic diversity a<br/> vital means by which art and design can serve <br/>\n          social progress.  \n              </p>\n            </ScrollAnimation><br/><br/>\n  \n\n          </section>\n\n          <section id=\"how\" className=\"how padding-top-300\">\n\n            <h2 className=\"title \">how</h2><br/>\n            <ScrollAnimation animateIn='fadeIn'>\n            <p>\n          We conceive and deliver artistic, innovative and participative <br/>installations, aiming to raise awareness and <br/>\n          mobilize action on social issues. For each project, we partner<br/> with a related not-for-profit organization to <br/>\n          create an interconnected programme that sheds light on the <br/>issue in question. In this way, the installation <br/>\n          serves as a beacon around which artists, customers and<br/> organizations can unite as a collective force for <br/> change. \n              </p>\n            </ScrollAnimation><br/><br/>\n  \n\n          </section>\n\n          <section id=\"contactus\" className=\"contactus\">\n          <div className=\"padding-top-300\" style={{marginBottom: '300px'}}>\n            <h2 className=\"title\">contact us</h2><br/>\n\n              <p>info@curateforchange.com</p>\n              <p>@curateforchange</p>\n\n              </div>\n          </section>\n\n      </div>\n    </div>\n  );\n\n\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.scss'\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}